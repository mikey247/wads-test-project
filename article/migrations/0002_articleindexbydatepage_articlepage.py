# Generated by Django 2.2.9 on 2020-03-03 21:42

from django.db import migrations, models
import django.db.models.deletion
import sitecore.blocks
import sitecore.parsers
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('article', '0001_initial'),
        ('wagtailimages', '0001_squashed_0021'),
        ('sitecore', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleIndexByDatePage',
            fields=[
                ('articleindexpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='article.ArticleIndexPage')),
            ],
            options={
                'abstract': False,
            },
            bases=('article.articleindexpage',),
        ),
        migrations.CreateModel(
            name='ArticlePage',
            fields=[
                ('sitepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sitecore.SitePage')),
                ('author', models.CharField(blank=True, help_text='Use this to override the default author/owner name (free text only).', max_length=255)),
                ('article_image_resize', models.CharField(choices=[('fill-1200x300', 'Banner (fill-1200x300)'), ('fill-1200x150', 'Banner (fill-1200x150)'), ('max-1200x300', 'Best Fit Original (max-1200x600)')], default='fill-1200x300', max_length=128)),
                ('intro', wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.RichTextBlock(label='Rich Text Paragraph')), ('markdown', sitecore.blocks.MarkdownAndShortcodeTextBlock(label='Markdown Paragraph')), ('image', wagtail.images.blocks.ImageChooserBlock()), ('docs', wagtail.documents.blocks.DocumentChooserBlock(template='bootstrapblocks/document.html')), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('code', wagtail.core.blocks.StructBlock([('lang', sitecore.blocks.Select2ChoiceBlock(choices=[('', 'Please select a language for syntax highlighting'), ('python3', 'Python'), ('javascript', 'JavaScript'), ('bash', 'Bash')])), ('code', wagtail.core.blocks.TextBlock(required=True)), ('hl_lines', sitecore.blocks.CSVIntListCharBlock(required=False)), ('line_nums', wagtail.core.blocks.BooleanBlock(help_text='Check to include line numbers', required=False))])), ('carousel', wagtail.snippets.blocks.SnippetChooserBlock(sitecore.blocks.CarouselSnippet, template='bootstrapblocks/carousel.html')), ('icon_card_deck', wagtail.snippets.blocks.SnippetChooserBlock(sitecore.blocks.IconCardDeckSnippet, template='bootstrapblocks/icon_card_deck.html'))], blank=True, help_text='Provide introductory content here. This will be used in the blog list pages and search result summaries.', validators=[sitecore.parsers.ValidateCoreBlocks])),
                ('body', wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.RichTextBlock(label='Rich Text Paragraph')), ('markdown', sitecore.blocks.MarkdownAndShortcodeTextBlock(label='Markdown Paragraph')), ('image', wagtail.images.blocks.ImageChooserBlock()), ('docs', wagtail.documents.blocks.DocumentChooserBlock(template='bootstrapblocks/document.html')), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('code', wagtail.core.blocks.StructBlock([('lang', sitecore.blocks.Select2ChoiceBlock(choices=[('', 'Please select a language for syntax highlighting'), ('python3', 'Python'), ('javascript', 'JavaScript'), ('bash', 'Bash')])), ('code', wagtail.core.blocks.TextBlock(required=True)), ('hl_lines', sitecore.blocks.CSVIntListCharBlock(required=False)), ('line_nums', wagtail.core.blocks.BooleanBlock(help_text='Check to include line numbers', required=False))])), ('carousel', wagtail.snippets.blocks.SnippetChooserBlock(sitecore.blocks.CarouselSnippet, template='bootstrapblocks/carousel.html')), ('icon_card_deck', wagtail.snippets.blocks.SnippetChooserBlock(sitecore.blocks.IconCardDeckSnippet, template='bootstrapblocks/icon_card_deck.html'))], blank=True, help_text='Provide the main body content here. This is not visible in the blog list and search summaries but is still searchable.', validators=[sitecore.parsers.ValidateCoreBlocks])),
                ('display_title', models.BooleanField(default=True, help_text='Toggle the display of the default title field.')),
                ('render_template', models.CharField(choices=[('article_page_default', 'Default (Basic article layout)'), ('article_page_splash', 'Splash (Full-width banner image/content; overlay box')], default='article_page_default', max_length=128)),
                ('sidebar_placement', models.CharField(choices=[('left', 'Single sidebar (To left of main content'), ('right', 'Single sidebar (To right of main content'), ('none', 'No sidebars')], default='left', max_length=128)),
                ('splash_content', wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.RichTextBlock(label='Rich Text Paragraph')), ('markdown', sitecore.blocks.MarkdownAndShortcodeTextBlock(label='Markdown Paragraph')), ('image', wagtail.images.blocks.ImageChooserBlock()), ('docs', wagtail.documents.blocks.DocumentChooserBlock(template='bootstrapblocks/document.html')), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('code', wagtail.core.blocks.StructBlock([('lang', sitecore.blocks.Select2ChoiceBlock(choices=[('', 'Please select a language for syntax highlighting'), ('python3', 'Python'), ('javascript', 'JavaScript'), ('bash', 'Bash')])), ('code', wagtail.core.blocks.TextBlock(required=True)), ('hl_lines', sitecore.blocks.CSVIntListCharBlock(required=False)), ('line_nums', wagtail.core.blocks.BooleanBlock(help_text='Check to include line numbers', required=False))])), ('carousel', wagtail.snippets.blocks.SnippetChooserBlock(sitecore.blocks.CarouselSnippet, template='bootstrapblocks/carousel.html')), ('icon_card_deck', wagtail.snippets.blocks.SnippetChooserBlock(sitecore.blocks.IconCardDeckSnippet, template='bootstrapblocks/icon_card_deck.html'))], blank=True, help_text='Provide content for the splash area here. This will be used in the blog list pages and search result summaries.', validators=[sitecore.parsers.ValidateCoreBlocks])),
                ('article_image', models.ForeignKey(blank=True, help_text='Provide an image that spans the top of the article content (and is used as thumbnail in the blog listings unless overridden.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('thumbnail_image', models.ForeignKey(blank=True, help_text='Specify an alternative image for the thumbnail in blog listings if the main banner image is not suitable or a different image is desired.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('sitecore.sitepage',),
        ),
    ]
