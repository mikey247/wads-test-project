# Generated by Django 2.0.8 on 2019-02-06 13:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.forms.widgets
import sitecore.blocks
import sitecore.fields
import sitecore.parsers
import wagtail.contrib.table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sitecore', '0001_initial'),
        ('wagtailcore', '0040_page_draft_title'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('desc', sitecore.fields.ShortcodeRichTextField(blank=True, validators=[sitecore.parsers.ParseShortcodes])),
                ('per_page', models.PositiveSmallIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ArticlePage',
            fields=[
                ('sitepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sitecore.SitePage')),
                ('author', models.CharField(blank=True, help_text='Use this to override the default author/owner name.', max_length=255)),
                ('intro', sitecore.fields.ShortcodeRichTextField(blank=True, help_text='Provide introductory text here to summarise the article. Content appears in blog style lists and search result summaries.', validators=[sitecore.parsers.ParseShortcodes])),
                ('body', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.StructBlock([('level', wagtail.core.blocks.ChoiceBlock(choices=[('h2', 'h2'), ('h3', 'h3'), ('h4', 'h4'), ('h5', 'h5'), ('h6', 'h6')], widget=django.forms.widgets.RadioSelect)), ('title', wagtail.core.blocks.CharBlock(required=True)), ('sub_title', wagtail.core.blocks.CharBlock(help_text='Optional sub-heading in small text', required=False))])), ('markdown', sitecore.blocks.MarkdownAndShortcodeTextBlock(label='Markdown Paragraph')), ('paragraph', sitecore.blocks.ShortcodeRichTextBlock(label='Rich Text Paragraph')), ('blockquote', wagtail.core.blocks.StructBlock([('quote', sitecore.blocks.ShortcodeRichTextBlock(required=True)), ('footer', wagtail.core.blocks.CharBlock(required=False)), ('cite', wagtail.core.blocks.CharBlock(required=False)), ('reverse', wagtail.core.blocks.BooleanBlock(help_text='Check to right-align the quote', required=False))])), ('image', wagtail.images.blocks.ImageChooserBlock()), ('docs', wagtail.documents.blocks.DocumentChooserBlock(template='bootstrapblocks/document.html')), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('external', wagtail.core.blocks.URLBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock()), ('code', wagtail.core.blocks.StructBlock([('lang', wagtail.core.blocks.ChoiceBlock(choices=[('python', 'Python'), ('javascript', 'JavaScript'), ('bash', 'Bash')])), ('code', wagtail.core.blocks.TextBlock(required=True)), ('hl_lines', sitecore.blocks.CSVIntListCharBlock(required=False)), ('line_nums', wagtail.core.blocks.BooleanBlock(help_text='Check to include line numbers', required=False))])), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='bootstrapblocks/table.html')), ('carousel', wagtail.snippets.blocks.SnippetChooserBlock(sitecore.blocks.CarouselSnippet, template='bootstrapblocks/carousel.html'))], validators=[sitecore.parsers.ValidateCoreBlocks])),
            ],
            options={
                'abstract': False,
            },
            bases=('sitecore.sitepage',),
        ),
    ]
